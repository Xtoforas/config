if ( $?prompt ) then

#---------------------------------------
# Clean-up path
#---------------------------------------
unsetenv PATH
unsetenv LD_LIBRARY_PATH
unsetenv MANPATH
unsetenv NEWSHELL

# Enable for debugging
#set verbose

#Initialize the path to something sane
#Take things from user directory always
setenv PATH /usr/bin:/usr/local/bin:/bin

#---------------------------------------
# Generic, Waterloo-specific
#---------------------------------------
echo "Loading WAT cshrc"

#setenv WAT_ENV_BASE /ms/WaterlooHg/hg/firmware
# For testing new changes
setenv WAT_ENV_BASE /lsi/home/colekas/src/firmware
source ${WAT_ENV_BASE}/env/wat.cshrc
source ${WAT_ENV_BASE}/env/wat.sw.cshrc

setenv PATH ${PATH}:/lsi/home/colekas/bin

# Figure out what type of machine we're on
# UCS - Cisco machine where we have root
# Callisto - Bringup machine with D7 board
# Watengbuild - Unmanaged machine
#
if ( `hostname | grep -o wl-ucs` == "wl-ucs" ) then
    setenv UCS true
    setenv CALLISTO true
else
    setenv UCS false
		if ( `hostname | grep -o wl-bups` == "wl-bups" ) then
		    setenv CALLISTO false
		endif
endif

# Load original environment on wl-bups09
if ( `hostname | grep -o wl-bups09` == "wl-bups09" ) then
    eval `/lsi/soft/emt/bin/emt.pl e60/sw/1.0`
endif

# This script allows for branch completion of GIT commands
if ($UCS == true) then
  source ~/.git-completion.tcsh
endif


#----------------------------------------
# Set Global Environment Variables
#----------------------------------------
if ( $?EDITOR ) then
  unsetenv EDITOR
  setenv EDITOR gvim
endif

#---------------------------------------
# Determine where to redirect X-Windows requests
#---------------------------------------
set CLIENT=`echo $SSH_CLIENT | cut -d " " -f 1`

echo "$CLIENT"

set CLIENT_HOST=`host $CLIENT | cut -d ' ' -f 5`

echo "$CLIENT_HOST"

if ( `echo ${CLIENT_HOST} | grep -i gonegirl` != "" ) then
    echo "Connecting from GoneGirl"
    xauth add "$CLIENT":0 MIT-MAGIC-COOKIE-1 20fa9430eb080a136702970f9f6e2bdb
else if( `echo ${CLIENT_HOST} | grep -i oldboy` != "" ) then
    echo "Connecting from OldBoy"
    xauth add "$CLIENT":0 MIT-MAGIC-COOKIE-1 5b689a8505dbe07d215d033115527fa9
endif

# Set custom variables
setenv DISPLAY "$CLIENT":0.0
set color=ls-F
set autocorrect         # Basic corrections when completing
set histdup='prev'
limit coredumpsize unlimited
#limit coredumpsize 0
# Watch any(1) other users every 0 seconds from any(2) console,
# when logging in/out.(I like this one!)
# It gives something like "root has logged on tty1 from local."
set watch=(0 any any)

# Format of output string when someone logins or logouts.(Look above)
# Hmm, can't be internationalised easily.
set who="%n has %a %l from %M."

#---------------------------------------
# Personal Alias
#---------------------------------------

if ( `hostname | grep -o watengbuild` == "watengbuild" ) then
    alias mfw             "make -j16 interfaces DEBUG=1 CWARE=1 GCCV=43 FW_ARCH=D7 && make -j16 DEBUG=1 CWARE=1 GCCV=43 FW_ARCH=D7"
    alias mr12cpufw       "make clean comp all cpu=x86 FWROOT=/lsi/home/colekas/src/r12cpu/build"
    alias mr12cpubin      "cdr xcode && cd interface/ProXCodeHostIFApp && make clean all platform=cpu_intel_xeon cpu=x86 FWROOT=/lsi/home/colekas/src/r12cpu/build && cd /vobs/cware/x86/os_wrapper/linux/ && make clean all cpu=x86 && cd /vobs/cware/x86/bsp && make clean all cpu=x86 && cd /vobs/cware/x86/osal && make clean all cpu=x86 && cd /vobs/cware/x86/startup && make clean all cpu=x86 FWROOT=/lsi/home/colekas/src/r12cpu/build"
    alias gvim            "/magnum/oss/bin/gvim"
    alias v               "gvim"
    alias vim             "/magnum/oss/bin/vim"
    unsetenv EDITOR
    setenv EDITOR /magnum/oss/bin/gvim
else
    alias mfw             "make interfaces CWARE=1 GCCV=43 FW_ARCH=D7 && make CWARE=1 GCCV=43 FW_ARCH=D7"
    alias v               "gvim"
endif
alias ls              "ls -F"
alias ll              "ls --color -lt"
alias la              "ls -la"
alias lsnorm          "ls --color=never"
alias v               "gvim"
alias tarbz           "gtar xvjf"
alias targz           "tar xzvf"
alias reload          "unalias -a; source ~/.tcshrc"
alias edit            "v ~/.tcshrc"
alias msw             "make prefix='$HOME/sw'"
alias fco             "cleartool lscheckout -cview -me -avobs"
alias blist           "cleartool lstype brtype:\!*"
alias calist          "cleartool describe -cact -fmt %c"
alias llist           "cleartool lstype lbtype:\!*"
alias lfind           "ct find -all -version 'lbtype(\!*)' -print"
alias clock           "cleartool lock activity:\!*@/vobs/fw_pvob"
alias block           "cleartool lock brtype:\!*"
alias llock           "cleartool lock lbtype:\!*"
alias cunlock         "cleartool unlock activity:\!*@/vobs/fw_pvob"
alias bunlock         "cleartool unlock brtype:\!*"
alias lunlock         "cleartool unlock lbtype:\!*"
alias bfind           "ct find -all -branch 'brtype(\!*)' -print"
alias freplace        "cleartool chevent -replace -cfile \!*.txt activity:\!*@/vobs/fw_pvob"
alias creplace        "cleartool chevent -replace -cfile /vobs/cware/\!*.txt brtype:\!*"
alias mfwdxt          "make interfaces CWARE=1 GCCV=43 FW_ARCH=DXT && make CWARE=1 GCCV=43 FW_ARCH=DXT"
#alias ucm-makebaseline "/ms/WaterlooHg/hg/firmware/ucm/scripts/ucm-makebaseline \!*"
alias pp              "echo $PATH | tr : '\n'"
alias pld             "echo $LD_LIBRARY_PATH | tr : '\n'"
alias abt             "make FW_ARCH=D7 GCCV=43 BRINGUP=1 && make FW_ARCH=D7 GCCV=43 BRINGUP=1 VERIF=BRINGUP DISTRIB=1"
alias catcs           "cleartool catcs | grep -v '^#'"
alias gengg           "make VERIF=GOLDGEN FW_ARCH=D7 DISTRIB=1"
alias pst             "ps axjf"

#---------------------------------------
# Completion Variables
#---------------------------------------
complete cdr 'p,1,`lsnorm ~/.cdr/`,'

#---------------------------------------
# ClearTool
#---------------------------------------
if ( $CALLISTO == false ) then
  set views=(`cleartool lsview -short | grep $USER`)
  set cusage=(`c help | grep Usage | sed "s/Usage: \(.*\) | \(.*\)/Usage: \1,\2/g" | awk '{split($2,t,","); print t[1]; print t[2]}' | grep -v ^$`)
endif

complete {c,ct,cleartool} 'p/1/$cusage/' \
'n/help/$cusage/' \
'n/-to/`cleartool lsview -short | grep $USER`/' \
'n/rebase/(-gr -graphical -rec -recommended -com -complete -pre -preview)/' \
'N/rebase/(-gr -graphical -rec -recommended -com -complete -pre -preview)/' \
'n/startview/`cleartool lsview -short | grep $USER`/' \
'N/startview/`cleartool lsview -short | grep $USER`/' \
'n/rmview/`cleartool lsview -short | grep $USER`/' \
'n/setview/`cleartool lsview -short | grep $USER`/' \
'n/deliver/(-to -res -complete)/' \
'n/-tag/`cleartool lsview -short`/'


setenv SGE_ROOT /magnum/sge/prod   # New production engine installed by Tim.
if (-f $SGE_ROOT/default/common/settings.csh) source $SGE_ROOT/default/common/settings.csh

if ( $CALLISTO == false ) then
  setenv EMTSOFTPATH /tools/emt_refresh/soft
  #emt -S gnu/make/3.80 /tools/emt_refresh/modules/centos/make/3.81
  #emt -S gnu/ctags/5.5.2 /tools/emt_refresh/modules/centos/ctags/5.6
  #emt -S gnu/vim/6.3 /tools/emt_refresh/modules/centos/vim-enhanced/7.0.109
  #emt -S centos/python/2.4.3 /tools/emt_refresh/modules/custom/python/2.7.7
  #emt -S gnu/perl/5.8.3 /tools/emt_refresh/modules/centos/perl/5.8.8
  #emt -S gnu/sed/3.02 /tools/emt_refresh/modules/centos/sed/4.1.5
  #emt -S gnu/binutils/2.13.2.1 /tools/emt_refresh/modules/centos/binutils/2.17.50.0.6
endif

endif
